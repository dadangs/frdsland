<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">


    <security:global-method-security secured-annotations="enabled" />

    <security:http auto-config="true" use-expressions="true">        
        <security:intercept-url pattern="/" access="permitAll" />
        <security:intercept-url pattern="/protected/**" access="isAuthenticated() and hasAnyRole('ROLE_ADMIN','ROLE_USER')" />
        <!--<security:intercept-url pattern="/protected/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" />-->
        <security:form-login login-page="/login" authentication-failure-url="/login?error=true" default-target-url="/protected/home" />

        <security:logout invalidate-session="true" logout-success-url="/login" logout-url="/logout" />
    </security:http>

 <!-- Password Hashing Bean -->
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" >
	   	 <constructor-arg name="strength" value="12" />
	</bean>
    <security:authentication-manager>
        <security:authentication-provider>
            
            <security:jdbc-user-service data-source-ref="dataSource"
                users-by-username-query="select user_name,  password, enabled from users where user_name = ?"
                authorities-by-username-query="select u.user_name, ur.authority from users u, user_roles ur where u.user_id = ur.user_id and u.user_name = ? " />
            <!--<security:password-encoder ref="passwordEncoder" />-->
            <security:password-encoder hash="md5" />
            <!--<security:password-encoder hash="md5"/>
            <security:user-service>
                <security:user name="dadang" password="0cc175b9c0f1b6a831c399e269772661" authorities="ROLE_USER" />
            </security:user-service>-->
        
            <!--security:jdbc-user-service
                    data-source-ref="mysqlDataSource"
                    users-by-username-query="select email, password, enabled from system_user where email = ?"
                    authorities-by-username-query="select u.email as login, u.user_role as role from system_user u where u.email = ?" /-->
             <!--<security:user-service> 
                 <security:user name="admin" password="secret" authorities="ROLE_ADMIN,ROLE_USER" /> 
                 <security:user name="user1" password="1111" authorities="ROLE_USER" /> 
             </security:user-service> -->
        </security:authentication-provider>
    </security:authentication-manager>
</beans>