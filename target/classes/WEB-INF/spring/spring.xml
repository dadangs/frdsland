<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context		http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc	http://www.springframework.org/schema/mvc/spring-mvc.xsd 
        http://www.springframework.org/schema/aop	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
 		http://www.springframework.org/schema/tx	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
 	
    <!-- Activates various annotations to be detected in bean classes -->
	<context:annotation-config />
	
	<mvc:annotation-driven />	
    <mvc:default-servlet-handler/>
 	<import resource="spring-security.xml"/>
   


    <!-- Login Interceptor -->
    <mvc:interceptors>
        <!--mvc:interceptor>
            <mvc:mapping path="/protected/**"/>
            <bean class="com.hadepro.developer.interceptor.LoginInterceptor"/>
        </mvc:interceptor-->
        <!-- workaround to fix IE8 problem -->
        <bean id="webContentInterceptor"
              class="org.springframework.web.servlet.mvc.WebContentInterceptor">
            <property name="cacheSeconds" value="0"/>
            <property name="useExpiresHeader" value="true"/>
            <property name="useCacheControlHeader" value="true"/>
            <property name="useCacheControlNoStore" value="true"/>
        </bean>
    </mvc:interceptors>
	<context:component-scan base-package="com.hadepro.employee" />
    <context:component-scan base-package="com.hadepro.developer.controller" />
    <context:component-scan base-package="com.hadepro.developer.model"/>
    <context:component-scan base-package="com.hadepro.developer.repository"/>
    <context:component-scan base-package="com.hadepro.developer.service"/>
     

	<bean id="employeeDAOImpl" class="com.hadepro.employee.EmployeeDAOImpl">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>
 	<bean id="localDB" class="com.hadepro.developer.controller.LocalDB">
        <property name="dataSource" ref="dataSource"/>
    </bean>
        
	<!-- Database Configurations -->
	<bean id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/hadepro" />
        <property name="username" value="root" />
        <property name="password" value="" />
     </bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- <bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/JSP/" />
		<property name="suffix" value=".jsp" />
	</bean>
	 -->
	<!-- TILES -->
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/tiles.xml</value>               
            </list>
        </property>
        <property name="preparerFactoryClass"
                  value="org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory"/>
    </bean>
      
    <!-- i18n -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="WEB-INF/i18n"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="useCodeAsDefaultMessage" value="true"/>
    </bean>
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.FixedLocaleResolver">
        <property name="defaultLocale" value="en"/>
    </bean>
    
    <bean class="org.springframework.web.servlet.view.XmlViewResolver">
      <property name="location" value="WEB-INF/spring/jasper-views.xml" />
      <property name="order" value="0" />
    </bean>  
    
    <!-- View Handler -->
      <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="favorPathExtension" value="true"/>
        <property name="mediaTypes">
            <map>
                <entry key="xml" value="text/xml"/>
                <entry key="json" value="application/json"/>
                <entry key="html" value="text/html"/>
                <entry key="less" value="text/html"/>
                 <entry key="pdf" value="application/pdf" />
            </map>
        </property>
       <property name="defaultViews">
			<list>
				<bean id="multiViewReport"
					class="org.springframework.web.servlet.view.jasperreports.JasperReportsMultiFormatView">
					<property name="url" value="classpath:JRStudent.jrxml" />
					 
				</bean>
			</list>
		</property> 
		<!-- <property name="ignoreAcceptHeader" value="true" />-->
        <property name="viewResolvers">
            <list>
                 <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
                    <property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
                </bean>
                 
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="prefix" value="/"/>
                </bean>
            </list>
        </property>
    </bean>  
    
</beans>